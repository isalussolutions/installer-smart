---
- name: "download the apps webapp"
  become_user: "{{hosting_username}}"
  include: "roles/common/tasks/download-maven-artifact.yml"
  vars:
    group_id: "{{apps_server_artifact_group_id}}"
    artifact_id: "{{apps_server_artifact_artifact_id}}"
    version: "{{apps_server_artifact_version}}"
    packaging: "{{apps_server_artifact_packaging}}"

- name: "create the service directory"
  become_user: "{{hosting_username}}"
  file: "path={{item}} state=directory"
  with_items:
    - "{{hosting_user_home}}/apps"

- name: "copy to the service directory"
  become_user: "{{hosting_username}}"
  copy:
    src: "{{apps_server_artifact_location}}"
    dest: "{{hosting_user_home}}/apps"
    remote_src: True

- name: "stop apps"
  service:
    name: "apps"
    state: "stopped"
  ignore_errors: yes

- name: "configure apps service"
  template:
    src: "apps.service.j2"
    dest: "/etc/systemd/system/apps.service"
    owner: "root"
    group: "root"
    mode: "0644"

- name: "enable apps service"
  shell: "systemctl enable apps.service"

- name: "reload systemd daemon"
  shell: "systemctl daemon-reload"

- name: "start apps"
  service:
    name: "apps"
    state: "started"

- name: "verify apps is available internally"
  become_user: "{{hosting_username}}"
  wait_for:
    host: "localhost"
    port: "{{apps_server_port}}"

- name: "configure nginx (apps)"
  template:
    src: "apps.j2"
    dest: "/etc/nginx/sites-enabled/apps"
    owner: "root"
    group: "root"
    mode: "0644"
  notify:
    - restart nginx

- meta: flush_handlers

- name: "verify apps is available externally"
  become_user: "{{hosting_username}}"
  wait_for:
    host: "{{apps_server_host}}"
    port: "{{apps_server_external_port}}"

- meta: flush_handlers

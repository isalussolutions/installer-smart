---
- name: "download the auth webapp"
  become_user: "{{hosting_username}}"
  include: "roles/common/tasks/download-maven-artifact.yml"
  vars:
    group_id: "{{auth_server_artifact_group_id}}"
    artifact_id: "{{auth_server_artifact_artifact_id}}"
    version: "{{auth_server_artifact_version}}"
    packaging: "{{auth_server_artifact_packaging}}"

- name: "create the service directory"
  become_user: "{{hosting_username}}"
  file: "path={{item}} state=directory"
  with_items:
    - "{{hosting_user_home}}/auth"
    - "{{hosting_user_home}}/auth/mysql"

- name: "copy to the service directory"
  become_user: "{{hosting_username}}"
  copy:
    src: "{{auth_server_artifact_location}}"
    dest: "{{hosting_user_home}}/auth"
    remote_src: true

- name: "stop auth"
  service:
    name: "auth"
    state: "stopped"
  ignore_errors: yes

- name: "drop the auth database"
  mysql_db:
    name: "{{auth_server_database}}"
    state: absent
  ignore_errors: yes

- name: "create the {{auth_server_database}} database"
  mysql_db:
    name: "{{auth_server_database}}"
    state: present

- name: "copy the auth database scripts"
  copy:
    src: "{{item}}"
    dest: "{{hosting_user_home}}/auth/mysql/{{item}}"
    mode: "0700"
  with_items:
    - "mysql_database_tables.sql"
    - "mysql_users.sql"
    - "mysql_system_scopes.sql"
    - "mysql_clients.sql"
    - "mysql_index_tuning.sql"
    - "bilirubin-chart-client.sql"
    - "gallery-client.sql"
    - "messaging-client.sql"
    - "patient-data-manager-client.sql"
    - "patient-picker-client.sql"
    - "reference-api-client.sql"
    - "sandbox-manager-client.sql"

- name: "load the auth database scripts"
  mysql_db:
    name: "{{auth_server_database}}"
    state: import
    target: "{{hosting_user_home}}/auth/mysql/{{item}}"
  with_items:
    - "mysql_database_tables.sql"
    - "mysql_users.sql"
    - "mysql_system_scopes.sql"
    - "mysql_clients.sql"
    - "mysql_index_tuning.sql"
    - "bilirubin-chart-client.sql"
    - "gallery-client.sql"
    - "messaging-client.sql"
    - "patient-data-manager-client.sql"
    - "patient-picker-client.sql"
    - "reference-api-client.sql"
    - "sandbox-manager-client.sql"

- name: "configure auth service"
  template:
    src: "auth.service.j2"
    dest: "/etc/systemd/system/auth.service"
    owner: "root"
    group: "root"
    mode: "0644"

- name: "enable auth service"
  shell: "systemctl enable auth.service"

- name: "reload systemd daemon"
  shell: "systemctl daemon-reload"

- name: "start auth"
  service:
    name: "auth"
    state: "started"

- name: "verify auth is available internally"
  become_user: "{{hosting_username}}"
  wait_for:
    host: "localhost"
    port: "{{auth_server_port}}"

- name: "configure nginx (auth)"
  template:
    src: "auth.j2"
    dest: "/etc/nginx/sites-enabled/auth"
    owner: "root"
    group: "root"
    mode: "0644"
  notify:
    - restart nginx

- meta: flush_handlers

- name: "verify auth is available externally"
  become_user: "{{hosting_username}}"
  wait_for:
    host: "{{auth_server_host}}"
    port: "{{auth_server_external_port}}"

- meta: flush_handlers


---
- name: "download the hspc_reference_api webapp"
  become_user: "{{hosting_username}}"
  include: "roles/common/tasks/download-maven-artifact.yml"
  vars:
    group_id: "{{api_server_artifact_info.group_id}}"
    artifact_id: "{{api_server_artifact_info.artifact_id}}"
    version: "{{api_server_artifact_info.version}}"
    packaging: "{{api_server_artifact_info.packaging}}"

- name: "create the service directory"
  become_user: "{{hosting_username}}"
  file: "path={{item}} state=directory"
  with_items:
    - "{{hosting_user_home}}/api-server"

- name: "copy to the service directory"
  become_user: "{{hosting_username}}"
  copy:
    src: "{{api_server_artifact_location}}"
    dest: "{{hosting_user_home}}/api-server"
    remote_src: True

- name: "drop the api-server database"
  mysql_db: name={{api_server_database}} state=absent

- name: "create the {{api_server_database}} database"
  mysql_db: name={{api_server_database}} state=present

# configure nginx
- name: "configure nginx (api-server)"
  template: src=api.j2 dest=/etc/nginx/sites-enabled/api owner=root group=root mode=0644
  notify:
    - restart nginx

# configure the api-server service
- name: "configure api-server service"
  template: src=api-server.service.j2
            dest=/etc/systemd/system/api-server.service
            owner=root group=root mode=0644

- name: "enable api-server service"
  shell: systemctl enable api-server.service

- name: "reload systemd daemon"
  shell: systemctl daemon-reload

- name: "restart api-server"
  service: name=api-server state=restarted

- meta: flush_handlers

- name: "verify api-server is available"
  become_user: "{{hosting_username}}"
  wait_for: host={{api_server_host}} port={{api_server_port}}

- meta: flush_handlers

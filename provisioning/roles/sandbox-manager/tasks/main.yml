---
- name: checkout repository sandbox_manager_project
  become_user: "{{hosting_username}}"
  git: repo="{{hspc_repo_base}}/{{sandbox_manager_project}}"
       version="{{sandbox_manager_branch}}"
       dest="{{hosting_user_home_hspc}}/{{sandbox_manager_project}}"
       update={{update_repositories}}
       force=yes
       depth=1

- name: ensures {{hosting_user_home_hspc}}/sandbox-manager/src/main/webapp/static/js/branding dir exists
  file: path={{hosting_user_home_hspc}}/sandbox-manager/src/main/webapp/static/js/branding state=directory

- name: patch branding
  become_user: "{{hosting_username}}"
  template: src=branded_text.js.j2
            dest={{hosting_user_home_hspc}}/sandbox-manager/src/main/webapp/static/js/branding/branded_text.js

- name: ensures {{hosting_user_home_hspc}}/sandbox-manager/src/main/webapp/static/js/templates dir exists
  file: path={{hosting_user_home_hspc}}/sandbox-manager/src/main/webapp/static/js/templates state=directory

- name: nav bar
  copy: src=sideNav.html dest={{hosting_user_home_hspc}}/sandbox-manager/src/main/webapp/static/js/templates/sideNav.html

- name: ensures {{hosting_user_home_hspc}}/sandbox-manager/src/main/webapp/static/branding/smart/images dir exists
  file: path={{hosting_user_home_hspc}}/sandbox-manager/src/main/webapp/static/branding/smart/images state=directory

- name: config smart-logo.png
  copy: src=smart-logo.png dest={{hosting_user_home_hspc}}/sandbox-manager/src/main/webapp/static/branding/smart/images/smart-logo.png

- name: config smart-logo@2x.png
  copy: src=smart-logo@2x.png dest={{hosting_user_home_hspc}}/sandbox-manager/src/main/webapp/static/branding/smart/images/smart-logo@2x.png

- name: config smart-logo@3x.png
  copy: src=smart-logo@3x.png dest={{hosting_user_home_hspc}}/sandbox-manager/src/main/webapp/static/branding/smart/images/smart-logo@3x.png

- name: build hspc sandbox-manager-server
  become_user: "{{hosting_username}}"
  shell: chdir={{hosting_user_home_hspc}}
       mvn clean install -e -U -f sandbox-manager/pom.xml -Ptomcat-embedded

- name: Configure MySQL user
  mysql_user: name={{mysql_user}} host={{mysql_host}} password={{mysql_pass}} priv={{mysql_privilage}} state=present

- name: Drop the sandbox-manager-server database
  mysql_db: name={{sandbox_manager_database}} state=absent

- name: Create the sandbox-manager-server database
  mysql_db: name={{sandbox_manager_database}} state=present

- name: patch sandbox manager create
  become_user: "{{hosting_username}}"
  template: src=create-sandman.sql.j2
             dest={{hosting_user_home_hspc}}/sandbox-manager/src/main/resources/db/create-sandman.sql

- name: patch sandbox manager install
  become_user: "{{hosting_username}}"
  template: src=initialize-sandman.sql.j2
            dest={{hosting_user_home_hspc}}/sandbox-manager/src/main/resources/db/initialize-sandman.sql

- name: create the sandbox manager database
  mysql_db: name={{sandbox_manager_database}} state=import target="{{hosting_user_home_hspc}}/sandbox-manager/src/main/resources/db/create-sandman.sql"

- name: initialize the sandbox manager database
  mysql_db: name={{sandbox_manager_database}} state=import target="{{hosting_user_home_hspc}}/sandbox-manager/src/main/resources/db/initialize-sandman.sql"

- name: configure sandbox-manager-server service
  template: src=sandbox-manager-server.service.j2
            dest=/etc/systemd/system/sandbox-manager-server.service
            owner=root group=root mode=0644

- name: enable sandbox-manager-server service
  shell: systemctl enable sandbox-manager-server.service

- name: reload systemd daemon
  shell: systemctl daemon-reload

- name: stop sandbox-manager-server
  service: name=sandbox-manager-server state=stopped

- name: configure nginx (sandbox-manager-server)
  template: src=nginx_sandbox_manager.j2 dest=/etc/nginx/sites-enabled/sandbox-manager owner=root group=root mode=0644
  notify:
    - restart nginx

- meta: flush_handlers

- name: restart sandbox-manager-server
  service: name=sandbox-manager-server enabled=yes state=restarted

- name: verify sandbox-manager-server is available
  wait_for: host={{sandbox_manager_server_internal_host}} port={{sandbox_manager_server_internal_port}}

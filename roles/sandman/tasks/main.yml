---
- name: "create the service directory"
  become_user: "{{hosting_username}}"
  file: "path={{item}} state=directory"
  with_items:
    - "{{hosting_user_home}}/sandman"

- name: "download the sandman webapp"
  become_user: "{{hosting_username}}"
  maven_artifact:
    group_id: "{{sandman_server_artifact_group_id}}"
    artifact_id: "{{sandman_server_artifact_artifact_id}}"
    version: "{{sandman_server_artifact_version}}"
    extension: "{{sandman_server_artifact_packaging}}"
    repository_url: "{{sandman_server_artifact_repository_url}}"
    dest: "{{hosting_user_home}}/sandman/{{sandman_server_artifact_artifact_id}}-{{sandman_server_artifact_version}}.{{sandman_server_artifact_packaging}}"

- name: "stop sandman"
  service:
    name: "sandman"
    state: "stopped"
  ignore_errors: yes

- name: "drop the sandman database"
  when: sandman_mysql_reset_database
  mysql_db:
    name: "{{sandman_server_database}}"
    state: absent
  ignore_errors: yes

- name: "create the {{sandman_server_database}} database"
  when: sandman_mysql_reset_database
  mysql_db:
    name: "{{sandman_server_database}}"
    state: present

- name: "configure sandman service"
  template:
    src: "sandman.service.j2"
    dest: "/etc/systemd/system/sandman.service"
    owner: "root"
    group: "root"
    mode: "0644"

- name: "enable sandman service"
  shell: "systemctl enable sandman.service"

- name: "reload systemd daemon"
  shell: "systemctl daemon-reload"

- name: "start sandman"
  service:
    name: "sandman"
    state: "started"

- name: "verify sandman is available internally"
  become_user: "{{hosting_username}}"
  wait_for:
    host: "{{sandman_server_internal_host}}"
    port: "{{sandman_server_internal_port}}"

- name: "copy the sandman database scripts"
  when: sandman_mysql_reset_database
  copy:
    src: "{{item}}"
    dest: "{{hosting_user_home}}/sandman/mysql/{{item}}"
    mode: "0700"
  with_items:
    - "initialize.sql"

- name: "load the sandman database scripts"
  when: sandman_mysql_reset_database
  mysql_db:
    name: "{{sandman_server_database}}"
    state: import
    target: "{{hosting_user_home}}/sandman/mysql/{{item}}"
  with_items:
    - "initialize.sql"

- name: "configure nginx (sandman)"
  template:
    src: "sandman.j2"
    dest: "/etc/nginx/sites-enabled/sandman"
    owner: "root"
    group: "root"
    mode: "0644"

- name: "restart nginx"
  service:
    name: "nginx"
    state: "restarted"

- name: "verify sandman is available externally"
  become_user: "{{hosting_username}}"
  wait_for:
    host: "{{sandman_server_external_host}}"
    port: "{{sandman_server_external_port}}"

